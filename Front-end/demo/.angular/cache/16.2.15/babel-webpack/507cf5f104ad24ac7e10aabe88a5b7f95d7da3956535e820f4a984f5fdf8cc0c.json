{"ast":null,"code":"import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n  return source => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n  constructor(notifier, source) {\n    this.notifier = notifier;\n    this.source = source;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, notifier, source) {\n    super(destination);\n    this.notifier = notifier;\n    this.source = source;\n  }\n  error(err) {\n    if (!this.isStopped) {\n      let errors = this.errors;\n      let retries = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const {\n            notifier\n          } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n      } else {\n        this.errors = undefined;\n        this.retriesSubscription = undefined;\n      }\n      this._unsubscribeAndRecycle();\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n      errors.next(err);\n    }\n  }\n  _unsubscribe() {\n    const {\n      errors,\n      retriesSubscription\n    } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  }\n  notifyNext() {\n    const {\n      _unsubscribe\n    } = this;\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n    this.source.subscribe(this);\n  }\n}","map":{"version":3,"names":["Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","retryWhen","notifier","source","lift","RetryWhenOperator","constructor","call","subscriber","subscribe","RetryWhenSubscriber","destination","error","err","isStopped","errors","retries","retriesSubscription","e","undefined","_unsubscribeAndRecycle","next","_unsubscribe","unsubscribe","notifyNext"],"sources":["D:/Duong/hoc/aptech/proj3/eProject3_RailwayReservation/Front-end/demo/node_modules/rxjs/_esm2015/internal/operators/retryWhen.js"],"sourcesContent":["import { Subject } from '../Subject';\r\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\r\nexport function retryWhen(notifier) {\r\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\r\n}\r\nclass RetryWhenOperator {\r\n    constructor(notifier, source) {\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\r\n    }\r\n}\r\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\r\n    constructor(destination, notifier, source) {\r\n        super(destination);\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    error(err) {\r\n        if (!this.isStopped) {\r\n            let errors = this.errors;\r\n            let retries = this.retries;\r\n            let retriesSubscription = this.retriesSubscription;\r\n            if (!retries) {\r\n                errors = new Subject();\r\n                try {\r\n                    const { notifier } = this;\r\n                    retries = notifier(errors);\r\n                }\r\n                catch (e) {\r\n                    return super.error(e);\r\n                }\r\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\r\n            }\r\n            else {\r\n                this.errors = undefined;\r\n                this.retriesSubscription = undefined;\r\n            }\r\n            this._unsubscribeAndRecycle();\r\n            this.errors = errors;\r\n            this.retries = retries;\r\n            this.retriesSubscription = retriesSubscription;\r\n            errors.next(err);\r\n        }\r\n    }\r\n    _unsubscribe() {\r\n        const { errors, retriesSubscription } = this;\r\n        if (errors) {\r\n            errors.unsubscribe();\r\n            this.errors = undefined;\r\n        }\r\n        if (retriesSubscription) {\r\n            retriesSubscription.unsubscribe();\r\n            this.retriesSubscription = undefined;\r\n        }\r\n        this.retries = undefined;\r\n    }\r\n    notifyNext() {\r\n        const { _unsubscribe } = this;\r\n        this._unsubscribe = null;\r\n        this._unsubscribeAndRecycle();\r\n        this._unsubscribe = _unsubscribe;\r\n        this.source.subscribe(this);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,qBAAqB,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,mBAAmB;AAChG,OAAO,SAASC,SAASA,CAACC,QAAQ,EAAE;EAChC,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,iBAAiB,CAACH,QAAQ,EAAEC,MAAM,CAAC,CAAC;AAC3E;AACA,MAAME,iBAAiB,CAAC;EACpBC,WAAWA,CAACJ,QAAQ,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAI,IAAIA,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,mBAAmB,CAACF,UAAU,EAAE,IAAI,CAACN,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC,CAAC;EAC5F;AACJ;AACA,MAAMO,mBAAmB,SAASZ,qBAAqB,CAAC;EACpDQ,WAAWA,CAACK,WAAW,EAAET,QAAQ,EAAEC,MAAM,EAAE;IACvC,KAAK,CAACQ,WAAW,CAAC;IAClB,IAAI,CAACT,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAS,KAAKA,CAACC,GAAG,EAAE;IACP,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACjB,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;MACxB,IAAIC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC1B,IAAIC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MAClD,IAAI,CAACD,OAAO,EAAE;QACVD,MAAM,GAAG,IAAIlB,OAAO,CAAC,CAAC;QACtB,IAAI;UACA,MAAM;YAAEK;UAAS,CAAC,GAAG,IAAI;UACzBc,OAAO,GAAGd,QAAQ,CAACa,MAAM,CAAC;QAC9B,CAAC,CACD,OAAOG,CAAC,EAAE;UACN,OAAO,KAAK,CAACN,KAAK,CAACM,CAAC,CAAC;QACzB;QACAD,mBAAmB,GAAGlB,cAAc,CAACiB,OAAO,EAAE,IAAIhB,qBAAqB,CAAC,IAAI,CAAC,CAAC;MAClF,CAAC,MACI;QACD,IAAI,CAACe,MAAM,GAAGI,SAAS;QACvB,IAAI,CAACF,mBAAmB,GAAGE,SAAS;MACxC;MACA,IAAI,CAACC,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACL,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;MAC9CF,MAAM,CAACM,IAAI,CAACR,GAAG,CAAC;IACpB;EACJ;EACAS,YAAYA,CAAA,EAAG;IACX,MAAM;MAAEP,MAAM;MAAEE;IAAoB,CAAC,GAAG,IAAI;IAC5C,IAAIF,MAAM,EAAE;MACRA,MAAM,CAACQ,WAAW,CAAC,CAAC;MACpB,IAAI,CAACR,MAAM,GAAGI,SAAS;IAC3B;IACA,IAAIF,mBAAmB,EAAE;MACrBA,mBAAmB,CAACM,WAAW,CAAC,CAAC;MACjC,IAAI,CAACN,mBAAmB,GAAGE,SAAS;IACxC;IACA,IAAI,CAACH,OAAO,GAAGG,SAAS;EAC5B;EACAK,UAAUA,CAAA,EAAG;IACT,MAAM;MAAEF;IAAa,CAAC,GAAG,IAAI;IAC7B,IAAI,CAACA,YAAY,GAAG,IAAI;IACxB,IAAI,CAACF,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACE,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACnB,MAAM,CAACM,SAAS,CAAC,IAAI,CAAC;EAC/B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}