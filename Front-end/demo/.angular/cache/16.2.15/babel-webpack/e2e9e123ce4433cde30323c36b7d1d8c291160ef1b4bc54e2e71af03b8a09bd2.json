{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  let hasSeed = false;\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\nclass ScanOperator {\n  constructor(accumulator, seed, hasSeed = false) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\nclass ScanSubscriber extends Subscriber {\n  constructor(destination, accumulator, _seed, hasSeed) {\n    super(destination);\n    this.accumulator = accumulator;\n    this._seed = _seed;\n    this.hasSeed = hasSeed;\n    this.index = 0;\n  }\n  get seed() {\n    return this._seed;\n  }\n  set seed(value) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n  _next(value) {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n  _tryNext(value) {\n    const index = this.index++;\n    let result;\n    try {\n      result = this.accumulator(this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}","map":{"version":3,"names":["Subscriber","scan","accumulator","seed","hasSeed","arguments","length","scanOperatorFunction","source","lift","ScanOperator","constructor","call","subscriber","subscribe","ScanSubscriber","destination","_seed","index","value","_next","next","_tryNext","result","err","error"],"sources":["D:/Quy Project/Project 3/eProject3_RailwayReservation/Front-end/demo/node_modules/rxjs/_esm2015/internal/operators/scan.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\r\nexport function scan(accumulator, seed) {\r\n    let hasSeed = false;\r\n    if (arguments.length >= 2) {\r\n        hasSeed = true;\r\n    }\r\n    return function scanOperatorFunction(source) {\r\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\r\n    };\r\n}\r\nclass ScanOperator {\r\n    constructor(accumulator, seed, hasSeed = false) {\r\n        this.accumulator = accumulator;\r\n        this.seed = seed;\r\n        this.hasSeed = hasSeed;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\r\n    }\r\n}\r\nclass ScanSubscriber extends Subscriber {\r\n    constructor(destination, accumulator, _seed, hasSeed) {\r\n        super(destination);\r\n        this.accumulator = accumulator;\r\n        this._seed = _seed;\r\n        this.hasSeed = hasSeed;\r\n        this.index = 0;\r\n    }\r\n    get seed() {\r\n        return this._seed;\r\n    }\r\n    set seed(value) {\r\n        this.hasSeed = true;\r\n        this._seed = value;\r\n    }\r\n    _next(value) {\r\n        if (!this.hasSeed) {\r\n            this.seed = value;\r\n            this.destination.next(value);\r\n        }\r\n        else {\r\n            return this._tryNext(value);\r\n        }\r\n    }\r\n    _tryNext(value) {\r\n        const index = this.index++;\r\n        let result;\r\n        try {\r\n            result = this.accumulator(this.seed, value, index);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n        this.seed = result;\r\n        this.destination.next(result);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAO,SAASC,IAAIA,CAACC,WAAW,EAAEC,IAAI,EAAE;EACpC,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIC,SAAS,CAACC,MAAM,IAAI,CAAC,EAAE;IACvBF,OAAO,GAAG,IAAI;EAClB;EACA,OAAO,SAASG,oBAAoBA,CAACC,MAAM,EAAE;IACzC,OAAOA,MAAM,CAACC,IAAI,CAAC,IAAIC,YAAY,CAACR,WAAW,EAAEC,IAAI,EAAEC,OAAO,CAAC,CAAC;EACpE,CAAC;AACL;AACA,MAAMM,YAAY,CAAC;EACfC,WAAWA,CAACT,WAAW,EAAEC,IAAI,EAAEC,OAAO,GAAG,KAAK,EAAE;IAC5C,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACAQ,IAAIA,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,cAAc,CAACF,UAAU,EAAE,IAAI,CAACX,WAAW,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC;EACtG;AACJ;AACA,MAAMW,cAAc,SAASf,UAAU,CAAC;EACpCW,WAAWA,CAACK,WAAW,EAAEd,WAAW,EAAEe,KAAK,EAAEb,OAAO,EAAE;IAClD,KAAK,CAACY,WAAW,CAAC;IAClB,IAAI,CAACd,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACe,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACb,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACc,KAAK,GAAG,CAAC;EAClB;EACA,IAAIf,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACc,KAAK;EACrB;EACA,IAAId,IAAIA,CAACgB,KAAK,EAAE;IACZ,IAAI,CAACf,OAAO,GAAG,IAAI;IACnB,IAAI,CAACa,KAAK,GAAGE,KAAK;EACtB;EACAC,KAAKA,CAACD,KAAK,EAAE;IACT,IAAI,CAAC,IAAI,CAACf,OAAO,EAAE;MACf,IAAI,CAACD,IAAI,GAAGgB,KAAK;MACjB,IAAI,CAACH,WAAW,CAACK,IAAI,CAACF,KAAK,CAAC;IAChC,CAAC,MACI;MACD,OAAO,IAAI,CAACG,QAAQ,CAACH,KAAK,CAAC;IAC/B;EACJ;EACAG,QAAQA,CAACH,KAAK,EAAE;IACZ,MAAMD,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;IAC1B,IAAIK,MAAM;IACV,IAAI;MACAA,MAAM,GAAG,IAAI,CAACrB,WAAW,CAAC,IAAI,CAACC,IAAI,EAAEgB,KAAK,EAAED,KAAK,CAAC;IACtD,CAAC,CACD,OAAOM,GAAG,EAAE;MACR,IAAI,CAACR,WAAW,CAACS,KAAK,CAACD,GAAG,CAAC;IAC/B;IACA,IAAI,CAACrB,IAAI,GAAGoB,MAAM;IAClB,IAAI,CAACP,WAAW,CAACK,IAAI,CAACE,MAAM,CAAC;EACjC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}